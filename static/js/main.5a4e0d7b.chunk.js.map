{"version":3,"sources":["MovieList.js","AppContext.js","MovieCategory.js","AuthContext.js","Login.js","MovieDetail.js","AuthenticatedRoute.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","Home","_useState","useState","_useState2","Object","slicedToArray","isFetching","setIsFetching","classes","_useState3","_useState4","movies","setMovies","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","fetchData","axios","get","then","response","data","results","catch","error","console","log","useEffect","addEventListener","removeEventListener","react_default","a","createElement","react","className","GridList","cellHeight","cols","gridList","map","item","react_router_dom","to","concat","id","GridListTile","key","src","poster_path","alt","title","AppContext","React","createContext","AppProvider","Provider","Consumer","flexGrow","MovieTabs","value","setValue","selected","popular","currentPage","topRated","nowPlaying","changeState","category","updateState","appState","setAppState","objectSpread","categories","AppBar","position","Tabs","onChange","event","newValue","Tab","label","AuthContext","container","alignItems","minHeight","flexDirection","loginContainer","width","height","padding","form","Login","props","username","setUsername","password","setPassword","_useContext","useContext","setAuthenticated","setAuthBody","target","preventDefault","isValidEmail","test","getRequestId","_ref","asyncToGenerator","regenerator_default","mark","_callee","session","wrap","_context","prev","next","sent","status","post","request_token","history","push","t0","stop","_x","apply","this","arguments","onSubmit","TextField","helpingText","variant","margin","required","fullWidth","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","color","Button","submit","MovieDetail","match","params","AuthenticatedRoute","Component","components","routeProps","objectWithoutProperties","authenticated","react_router","assign","render","App","path","exact","component","strict","Header","Boolean","location","hostname","ReactDOM","localStorage","getItem","authBody","setItem","defaultContext","children","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a4e0d7b.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile } from '@material-ui/core'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport { from } from 'rxjs';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    }\n}));\n\nexport default function Home() {\n    const [isFetching, setIsFetching] = useState(false);\n    const classes = useStyles();\n    const [movies, setMovies] = useState([])\n\n    useEffect(() => {\n        setIsFetching(true)\n        fetchData()\n    }, [])\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, []);\n\n    useEffect(() => {\n        if (!isFetching) return;\n        fetchData();\n    }, [isFetching]);\n\n    function handleScroll() {\n        if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || isFetching) return;\n        setIsFetching(true);\n    }\n\n\n    function fetchData() {\n        axios\n            .get(`https://api.themoviedb.org/3/movie/popular?api_key=3d9f6ef05faa3072ee2caf7fb6870964&language=en-US&page=1`)\n            .then(response => {\n                setMovies(response.data.results)\n                setIsFetching(false)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    return (\n        <Fragment>\n            <div className={classes.root}>\n                <GridList cellHeight={300} cols={5} className={classes.gridList} >\n                    {\n                        movies.map((item) =>\n                            <Link to={`/movies/${item.id}`}>\n                                <GridListTile key={item.id}>\n                                    <img src={`http://image.tmdb.org/t/p/w185/${item.poster_path}`} alt={item.title} />\n                                </GridListTile>\n                            </Link>\n                        )\n                    }\n                </GridList>\n                {isFetching && 'Fetching more list items...'}\n            </div >\n        </Fragment>\n    );\n}","import React from 'react'\nconst AppContext = React.createContext({})\nexport const AppProvider = AppContext.Provider\nexport const AppConsumer = AppContext.Consumer\nexport default AppContext","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\nimport Home from './MovieList'\nimport { AppProvider } from './AppContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function MovieTabs() {\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const [appState, setAppState] = useState({\n        selected: 'popular',\n        movies: [],\n        popular: {\n            currentPage: 1,\n            movies: []\n        },\n        topRated: {\n            currentPage: 1,\n            movies: []\n        },\n        nowPlaying: {\n            currentPage: 1,\n            movies: []\n        },\n        changeState: (category,  movies) => {\n            updateState(category, movies)\n        }\n    })\n\n    const updateState = (category, movies) =>{\n        switch (category) {\n            case 'popular':\n                setAppState({ ...appState, popular: { currentPage: appState.currentPage++, movies: movies } })\n                //debugger\n                break;\n            case 'top_rated':\n                setAppState({ ...appState, topRated: { currentPage: appState.currentPage++ , movies: movies } })\n                break;\n            case 'now_playing':\n                setAppState({ ...appState, nowPlaying: { currentPage: appState.currentPage++, movies: movies } })\n                break;\n            default:\n                break\n        }\n        //debugger\n    }\n    const categories = ['popular', 'top_rated', 'now_playing']\n\n    function handleChange(event, newValue) {\n        setValue(newValue);\n        setAppState({ ...appState, selected: categories[newValue] })\n    }\n\n\n    return (\n        <AppProvider value={[appState, setAppState]}>\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={handleChange}>\n                        {\n                            categories.map((item) => {\n                                return <Tab label={item} />\n                            })\n                        }\n                    </Tabs>\n                </AppBar>\n                <Home />\n            </div>\n            {appState && <p>{appState.selected}</p>}\n        </AppProvider>\n    );\n}\n","import React, { useState,useEffect } from 'react'\nconst AuthContext = React.createContext()\nconst AuthConsumer = AuthContext.Consumer\n\nfunction AuthProvider(props) {\n    const [authenticated, setAuthenticated] = useState(window.localStorage.getItem('auth') || false)\n    const [authBody, setAuthBody] = useState(window.localStorage.getItem('authBody') || null)\n\n    useEffect(() => {\n        window.localStorage.setItem('auth', authenticated)\n        window.localStorage.setItem('authBody', authBody)\n        console.log('called here')\n    }, [authenticated, authBody])\n\n    const defaultContext = {\n        authenticated,\n        setAuthenticated,\n        authBody,\n        setAuthBody\n    }\n\n    return (\n        <AuthContext.Provider value={defaultContext}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport  {AuthContext, AuthProvider , AuthConsumer}\n\n","import React, { useState, useContext } from 'react'\nimport { TextField, Button, FormControlLabel, Checkbox } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles';\nimport axios from 'axios'\nimport { AuthContext } from './AuthContext';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: 'primary',\n        minHeight: '100vh',\n        flexDirection: 'column'\n    },\n    loginContainer: {\n        width: '30vh',\n        height: '30vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '10vh'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '45vh',\n        height: '45vh'\n    }\n}));\n\n\n\n\nexport default (props) => {\n    const classes = useStyles()\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const { setAuthenticated, setAuthBody } = useContext(AuthContext)\n\n    const setValue = (event) => {\n        switch (event.target.id) {\n            case 'email':\n                event.preventDefault()\n                setUsername(event.target.value)\n                break;\n            case 'password':\n                setPassword(event.target.value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    const validateEmail = (email) => {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n    const isValidEmail = () => {\n        return username !== '' && validateEmail(username)\n    }\n\n    const getRequestId = async (event) => {\n        event.preventDefault()\n        try {\n            let response = await axios.get('https://api.themoviedb.org/3/authentication/token/new?api_key=3d9f6ef05faa3072ee2caf7fb6870964')\n            if (response.status === 200) {\n                let session = await axios.post('https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=3d9f6ef05faa3072ee2caf7fb6870964',\n                    { username: username, password: password, request_token: response.data.request_token })\n                setAuthenticated(true)\n                setAuthBody(session.data)\n                props.history.push('/movies')\n            }\n        }\n        catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.loginContainer}>\n                <form className={classes.form} onSubmit={getRequestId}>\n                    <TextField\n                        error={!isValidEmail(username)}\n                        helpingText={!isValidEmail ? 'enter valid email' : ''}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        onChange={setValue}\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        error={password === ''}\n                        helpingText={password === '' ? 'enter valid password' : ''}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={setValue}\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n              </Button>\n\n                </form>\n            </div>\n        </div>\n    );\n\n}","import React from 'react'\n\nexport default function MovieDetail({match}){\n    console.log(match.params.id)\n    return (<div>hello</div>)\n}","import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { AuthContext } from './AuthContext'\nexport default ({ components: Component, ...routeProps }) => {\n    const { authenticated } = useContext(AuthContext)\n    return (\n        <Route\n            {...routeProps}\n            render={(props) => authenticated\n                ? <Component {...props} />\n                : <Redirect to=\"/login\" />} />\n    );\n};","import React, { useContext } from 'react';\nimport './App.css';\nimport Header from './MovieCategory'\nimport Login from './Login'\nimport MovieDetail from './MovieDetail'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport AuthenticatedRoute from './AuthenticatedRoute';\n\nfunction App() {\n  return (\n      <Router>\n        <Switch>\n          <Route path=\"/login\" exact component={Login} />\n          <AuthenticatedRoute path=\"/movies\" exact strict component={Header}/>\n          <Route path=\"/movies/:id\" component={MovieDetail}/>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { AuthProvider } from './AuthContext';\n\nReactDOM.render(<AuthProvider><App /></AuthProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}